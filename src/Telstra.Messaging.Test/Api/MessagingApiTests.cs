/* 
 * Telstra Messaging API
 *
 * The Telstra Messaging API specification
 *
 * The version of the OpenAPI document: 2.2.9
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Telstra.Messaging.Client;
using Telstra.Messaging.Api;
using Telstra.Messaging.Model;

namespace Telstra.Messaging.Test
{
    /// <summary>
    ///  Class for testing MessagingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MessagingApiTests : IDisposable
    {
        private MessagingApi instance;

        public MessagingApiTests()
        {
            instance = new MessagingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MessagingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MessagingApi
            //Assert.IsType(typeof(MessagingApi), instance, "instance is a MessagingApi");
        }

        
        /// <summary>
        /// Test GetMMSStatus
        /// </summary>
        [Fact]
        public void GetMMSStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageid = null;
            //var response = instance.GetMMSStatus(messageid);
            //Assert.IsType<List<OutboundPollResponse>> (response, "response is List<OutboundPollResponse>");
        }
        
        /// <summary>
        /// Test GetSMSStatus
        /// </summary>
        [Fact]
        public void GetSMSStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //var response = instance.GetSMSStatus(messageId);
            //Assert.IsType<List<OutboundPollResponse>> (response, "response is List<OutboundPollResponse>");
        }
        
        /// <summary>
        /// Test MMSHealthCheck
        /// </summary>
        [Fact]
        public void MMSHealthCheckTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MMSHealthCheck();
            //Assert.IsType<HealthCheckResponse> (response, "response is HealthCheckResponse");
        }
        
        /// <summary>
        /// Test RetrieveMMSReplies
        /// </summary>
        [Fact]
        public void RetrieveMMSRepliesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveMMSReplies();
            //Assert.IsType<GetMmsResponse> (response, "response is GetMmsResponse");
        }
        
        /// <summary>
        /// Test RetrieveSMSReplies
        /// </summary>
        [Fact]
        public void RetrieveSMSRepliesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RetrieveSMSReplies();
            //Assert.IsType<InboundPollResponse> (response, "response is InboundPollResponse");
        }
        
        /// <summary>
        /// Test SMSHealthCheck
        /// </summary>
        [Fact]
        public void SMSHealthCheckTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SMSHealthCheck();
            //Assert.IsType<HealthCheckResponse> (response, "response is HealthCheckResponse");
        }
        
        /// <summary>
        /// Test SMSMulti
        /// </summary>
        [Fact]
        public void SMSMultiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendSmsMultiRequest payload = null;
            //var response = instance.SMSMulti(payload);
            //Assert.IsType<MessageSentResponseSms> (response, "response is MessageSentResponseSms");
        }
        
        /// <summary>
        /// Test SendMMS
        /// </summary>
        [Fact]
        public void SendMMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendMmsRequest body = null;
            //var response = instance.SendMMS(body);
            //Assert.IsType<MessageSentResponseMms> (response, "response is MessageSentResponseMms");
        }
        
        /// <summary>
        /// Test SendSMS
        /// </summary>
        [Fact]
        public void SendSMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SendSMSRequest payload = null;
            //var response = instance.SendSMS(payload);
            //Assert.IsType<MessageSentResponseSms> (response, "response is MessageSentResponseSms");
        }
        
    }

}
