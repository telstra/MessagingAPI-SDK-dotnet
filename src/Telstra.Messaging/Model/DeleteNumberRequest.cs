/* 
 * Telstra Messaging API
 *
 * The Telstra Messaging API specification
 *
 * The version of the OpenAPI document: 2.2.9
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Telstra.Messaging.Client.OpenAPIDateConverter;

namespace Telstra.Messaging.Model
{
    /// <summary>
    /// DeleteNumberRequest
    /// </summary>
    [DataContract]
    public partial class DeleteNumberRequest :  IEquatable<DeleteNumberRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteNumberRequest" /> class.
        /// </summary>
        /// <param name="emptyArr">Empty Arr (default to 0).</param>
        public DeleteNumberRequest(int emptyArr = 0)
        {
            // use default value if no "emptyArr" provided
            if (emptyArr == null)
            {
                this.EmptyArr = 0;
            }
            else
            {
                this.EmptyArr = emptyArr;
            }
        }
        
        /// <summary>
        /// Empty Arr
        /// </summary>
        /// <value>Empty Arr</value>
        [DataMember(Name="emptyArr", EmitDefaultValue=false)]
        public int EmptyArr { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeleteNumberRequest {\n");
            sb.Append("  EmptyArr: ").Append(EmptyArr).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DeleteNumberRequest);
        }

        /// <summary>
        /// Returns true if DeleteNumberRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of DeleteNumberRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeleteNumberRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EmptyArr == input.EmptyArr ||
                    this.EmptyArr.Equals(input.EmptyArr)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.EmptyArr.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
